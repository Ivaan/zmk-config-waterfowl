/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
	behaviors {
        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "mo_tog";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&tog>;
        };
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "CUSTOM_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
        lmt: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39>;    // <---[[right-hand keys]]
        };
        rmt: right_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33 34 35 36 37 38 39>;    // <---[[left-hand keys]]
        };
    };


    keymap {
        compatible = "zmk,keymap";
        default_layer {
/* QWERTY
 *
 * ,----------------------------------.                      ,----------------------------------.
 * |   Q  |   W  |   E  |   R  |   T  |                      |   Y  |   U  |   I  |   O  |   P  |
 * |------+------+------+------+------|                      |------+------+------+------+------|
 * |   A  |   S  |   D  |   F  |   G  |                      |   H  |   J  |   K  |   L  |   '  |
 * |------+------+------+------+------|  ,-----.   ,------.  |------+------+------+------+------|
 * |   Z  |   X  |   C  |   V  |   B  |  | mute|   |prnscn|  |   N  |   M  |   ,  |   .  |   /  |
 * `----------------------------------'  `-----'   `------'  `----------------------------------'
 *        ,-----.   ,-----------------------.           ,---------------------.   ,-----.
 *        |  1  |   |GAME/BT| ENTER | ENTER |           | SPACE | SPACE | ESC |   |  4  |
 *        `-----'   `-----------------------'           `---------------------'   `-----'
 */
            display-name = "qwerty";
            bindings = <
    &kp Q        &kp W        &kp E        &kp R        &kp T           &kp Y      &kp U        &kp I        &kp O        &kp P
    &lmt LGUI A  &lmt LALT S  &lmt LSHFT D &lmt LCTRL F &kp G           &kp H      &rmt RCTRL J &rmt RSHFT K &rmt RALT L  &rmt RGUI APOS
    &kp Z        &kp X        &kp C        &kp V        &kp B           &kp N      &kp M        &kp COMMA    &kp DOT      &kp FSLH
    &kp N1       &mo_tog 4 5  &lt 1 RET    &lt 3 RET    &kp C_MUTE      &kp PSCRN  &lt 2 SPACE  &lt 2 SPACE  &kp ESC      &kp N4
            >;

            sensor-bindings = <&inc_dec_kp LC(Z) LC(Y) &inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp LC(Z) LC(Y) &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        navnum_left_layer {
/* NAVNUMLEFT
 *
 * ,----------------------------------.                      ,----------------------------------.
 * |   1  |   2  |   3  |   4  |   5  |                      | PASTE| Home |  Up  | PgUp | CUT  |
 * |------+------+------+------+------|                      |------+------+------+------+------|
 * |   0  |   9  |   8  |   7  |   6  |                      | COPY | Left | Down | Right|   =  |
 * |------+------+------+------+------|  ,-----.    ,-----.  |------+------+------+------+------|
 * | UNDO |  CUT | COPY | PASTE|   [  |  |  2  |    |  3  |  |  ]   | End  | Down | PgDn |   -  |
 * `----------------------------------'  `-----'    `-----'  `----------------------------------'
 *        ,-----.   ,-----------------------.           ,---------------------.   ,-----.
 *        |  1  |   |GAME/BT| ENTER | ENTER |           | SPACE | SPACE | ESC |   |  4  |
 *        `-----'   `-----------------------'           `---------------------'   `-----'
 */
            display-name = "navLeft";
            bindings = <
    &kp N1        &kp N2        &kp N3         &kp N4         &kp N5                &kp LC(V)   &kp HOME    &kp UP      &kp PG_UP &kp LC(X)
    &ht LGUI N0   &ht LALT N9   &ht LSHFT N8   &ht LCTRL N7   &kp N6                &kp LC(C)   &kp LEFT    &kp DOWN    &kp RIGHT &ht RGUI EQUAL
    &kp LC(Z)     &kp LC(X)     &kp LC(C)      &kp LC(V)      &kp LBKT              &kp RBKT    &kp END     &kp DOWN    &kp PG_DN &kp MINUS
    &kp N1        &mo_tog 4 5   &lt 1 RET      &lt 1 RET      &kp C_MUTE            &kp PSCRN   &lt 3 SPACE &lt 3 SPACE &kp ESC   &kp N4
            >;

            sensor-bindings = <&inc_dec_kp LC(Z) LC(Y) &inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp LC(Z) LC(Y) &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        navnum_right_layer {
/* NAVNUMRIGHT
 *
 * ,----------------------------------.                      ,----------------------------------.
 * |   1  |   2  |   3  |   4  |   5  |                      | PASTE| Home |  Up  | PgUp | CUT  |
 * |------+------+------+------+------|                      |------+------+------+------+------|
 * |   0  |   9  |   8  |   7  |   6  |                      | COPY | Left | Down | Right|   =  |
 * |------+------+------+------+------|  ,-----.    ,-----.  |------+------+------+------+------|
 * | UNDO |  CUT | COPY | PASTE|   [  |  |  2  |    |  3  |  |  ]   | End  | Down | PgDn |   -  |
 * `----------------------------------'  `-----'    `-----'  `----------------------------------'
 *        ,-----.   ,-----------------------.           ,---------------------.   ,-----.
 *        |  1  |   |GAME/BT|  TAB  |  TAB  |           | SPACE | SPACE | ESC |   |  4  |
 *        `-----'   `-----------------------'           `---------------------'   `-----'
 */
            display-name = "navRight";
            bindings = <
    &kp N1       &kp N2       &kp N3        &kp N4        &kp N5                &kp LC(V)  &kp HOME        &kp UP          &kp PG_UP       &kp LC(X)
    &ht LGUI N0  &ht LALT N9  &ht LSHFT N8  &ht LCTRL N7  &kp N6                &kp LC(C)  &ht RCTRL LEFT  &ht RSHFT DOWN  &ht RALT RIGHT  &ht RGUI EQUAL
    &kp LC(Z)    &kp LC(X)    &kp LC(C)     &kp LC(V)     &kp LBKT              &kp RBKT   &kp END         &kp DOWN        &kp PG_DN       &kp MINUS
    &kp N1       &mo_tog 4 5  &lt 3 TAB     &lt 3 TAB     &kp C_MUTE            &kp PSCRN  &lt 3 SPACE     &lt 3 SPACE     &kp ESC         &kp N4
            >;

            sensor-bindings = <&inc_dec_kp LC(Z) LC(Y) &inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp LC(Z) LC(Y) &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        funcpad_layer {
/* FUNCPAD
 *
 * ,----------------------------------.                      ,----------------------------------.
 * |  F1  |  F2  |  F3  |  F4  |  F5  |                      |NumLck|   7  |   8  |   9  |  -   |
 * |------+------+------+------+------|                      |------+------+------+------+------|
 * |  F10 |  F9  |  F8  |  F7  |  F6  |                      |CapLck|   4  |   5  |   6  |  +   |
 * |------+------+------+------+------|  ,-----.    ,-----.  |------+------+------+------+------|
 * |  F11 |  F12 |      |      |      |  |  2  |    |  3  |  |      |   1  |   2  |   3  |      |
 * `----------------------------------'  `-----'    `-----'  `----------------------------------'
 *        ,-----.   ,-----------------------.           ,---------------------.   ,-----.
 *        |  1  |   |       |       |       |           |   0   |   0   |  .  |   |  4  |
 *        `-----'   `-----------------------'           `---------------------'   `-----'
 */
            display-name = "funcPad";
            bindings = <
    &kp F1    &kp F2  &kp F3  &kp F4  &kp F5                 &kp KP_NUM &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS
    &kp F10   &kp F9  &kp F8  &kp F7  &kp F6                 &kp CAPS   &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS
    &kp F11   &kp F12 &trans  &trans  &trans                 &trans     &kp KP_N1  &kp KP_N2  &kp KP_N3  &trans
    &kp N1    &trans  &trans  &trans  &kp N2                 &kp N3     &kp N0     &kp N0     &kp KP_DOT &kp N4
            >;

            sensor-bindings = <&inc_dec_kp LC(Z) LC(Y) &inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp LC(Z) LC(Y) &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

		bluetooth_layer {
/* BLUETOOTH
 *
 * ,----------------------------------.                      ,----------------------------------.
 * |      |      | BTCLR|      | Reset|                      |      |      | BTCLR|      |      |
 * |------+------+------+------+------|                      |------+------+------+------+------|
 * |  BT0 |  BT1 |  BT2 |  BT3 |  BT4 |                      |  BT0 |  BT1 |  BT2 |  BT3 |  BT4 |
 * |------+------+------+------+------|  ,-----.    ,-----.  |------+------+------+------+------|
 * |      |      |      |      |      |  |  2  |    |  3  |  |      |      |      |      |      |
 * `----------------------------------'  `-----'    `-----'  `----------------------------------'
 *        ,-----.   ,-----------------------.           ,---------------------.   ,-----.
 *        |  1  |   |GAME/BT| ENTER | ENTER |           | SPACE | SPACE | ESC |   |  4  |
 *        `-----'   `-----------------------'           `---------------------'   `-----'
 */
            display-name = "blueTooth";
            bindings = <
    &trans        &trans        &bt BT_CLR    &trans        &sys_reset          &trans          &trans          &bt BT_CLR      &trans        &trans
    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4        &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4
    &trans        &trans        &trans        &trans        &trans              &trans          &trans          &trans          &trans        &trans
    &kp N1        &mo_tog 4 5   &lt 2 RET     &lt 2 RET     &kp C_MUTE          &kp PSCRN       &lt 1 SPACE     &lt 1 SPACE     &kp ESC       &kp N4
            >;

            sensor-bindings = <&inc_dec_kp LC(Z) LC(Y) &inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp LC(Z) LC(Y) &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        game_layer {
/* GAMELAYER (mostly for Minecraft and perhaps other lefthand WASD move games)
 *
 * ,----------------------------------.                      ,----------------------------------.
 * |   T  |   Q  |   W  |   E  |   R  |                      |   Y  |   U  |   I  |   O  |   P  |
 * |------+------+------+------+------|                      |------+------+------+------+------|
 * |   G  |   A  |   S  |   D  |   F  |                      |   H  |   J  |   K  |   L  |   ;  |
 * |------+------+------+------+------|  ,-----.    ,-----.  |------+------+------+------+------|
 * | CTRL | SHFT |      |      |      |  |  2  |    |  3  |  |   N  |   M  |   ,  |   .  |   /  |
 * `----------------------------------'  `-----'    `-----'  `----------------------------------'
 *        ,-----.   ,-----------------------.           ,---------------------.   ,-----.
 *        |  1  |   |GAME/BT| SPACE | SPACE |           | SPACE | SPACE | ESC |   |  4  |
 *        `-----'   `-----------------------'           `---------------------'   `-----'
 */
            display-name = "gamePad";
            bindings = <
    &kp T      &kp Q       &kp W      &kp E      &kp R          &kp Y   &kp U      &kp I      &kp O    &kp P
    &kp G      &kp A       &kp S      &kp D      &kp F          &kp H   &kp J      &kp K      &kp L    &kp SEMI
    &kp LCTRL  &kp LSHFT   &trans     &trans     &trans         &kp N   &kp M      &kp COMMA  &kp DOT  &kp FSLH
    &kp N1     &mo_tog 4 5 &kp SPACE  &kp SPACE  &kp N2         &kp N3  &kp SPACE  &kp SPACE  &kp ESC  &kp N4
            >;

            sensor-bindings = <&inc_dec_kp LC(Z) LC(Y) &inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp LC(Z) LC(Y) &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        combo_tild {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp GRAVE>;
        };
        combo_guitap {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp LGUI>;
        };
        combo_backspace {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp BACKSPACE>;
        };
        combo_delete {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp DELETE>;
        };
        combo_backslash {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp BACKSLASH>;
        };
        combo_semicolon {
            timeout-ms = <50>;
            key-positions = <18 19>;
            bindings = <&kp SEMICOLON>;
        };
        combo_app {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp K_APP>;
        };
    };
};
